{
  "openapi": "3.0.2",
  "info": {
    "title": "Part Program Annotator API",
    "version": "1.0.0",
    "description": "This Hypertherm REST web service identifies invalid syntax in your part program, so that you can fix problems with the code before loading the part at your CNC or [converting holes into True Holes](https://developer.hypertherm.com/).\n\n<sub>* Parts are valid if they follow the syntax rules in Section 1 of the *EDGE Connect Programmer Reference* manual (809550). This API does **not** analyze geometry.</sub>",
    "contact": {
      "email": "713ee467.Hypertherm.onmicrosoft.com@amer.teams.ms"
    }
  },
  "servers": [
    {
      "url": "https://gcodelinter-staging.azurewebsites.net:443/",
      "description": "(No authentication)"
    }
  ],
  "tags": [
    {
      "name": "Check my part program",
      "description": "Find out if your part program is valid and get syntax tips to help make qualified holes eligible for conversion into True Holes."
    }
  ],
  "paths": {
    "/api/v1/part": {
      "post": {
        "tags": [
          "Check my part program"
        ],
        "description": "Returns information about possible syntax errors in your part program by line number. When possible, returns tips to make holes eligible for conversion into True Holes.",
        "operationId": "TBD",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "program": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "program": "($NESTGUID={825cce8a-1aa4-496f-b430-d6e1686426dd}) G59 V509 F11189 G00 M07 M08 M02"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/part-posted"
          },
          "400": {
            "$ref": "#/components/responses/badrequest"
          },
          "404": {
            "$ref": "#/components/responses/notfound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "part-posted": {
        "description": "Your part program has been reviewed. Warnings and errors about syntax issues, if any, are listed the JSON response body.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "kerfSettings": {
                  "type": "string",
                  "example": null
                },
                "cuts": {
                  "type": "string",
                  "example": null
                },
                "suggestedResolution": {
                  "type": "string",
                  "example": "There are no errors or warnings to resolve."
                },
                "proNestGuid": {
                  "type": "string",
                  "example": "825cce8a-1aa4-496f-b430-d6e1686426dd"
                },
                "process": {
                  "type": "object",
                  "properties": {
                    "hyperthermRecordID": {
                      "type": "string",
                      "example": null
                    },
                    "line": {
                      "type": "integer",
                      "example": -1
                    }
                  }
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "[line number]": {
                      "type": "string",
                      "enum": [
                        "This sequence of commands is not valid machine code input [line number].",
                        "Missing token *[details]*",
                        "Unidentified Exception"
                      ],
                      "example": "Missing token [@0,0:2='G21',<23>,1:0] @ 1:0"
                    }
                  }
                },
                "warnings": {
                  "type": "object",
                  "properties": {
                    "[line number]": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "True Hole Technology could be available if Kerf Compensation G41 were set immediately before M07.",
                          "True Hole Technology could be available if Kerf Compensation G42 were set immediately before M07.",
                          "There is no True Hole Process available for this material and thickness combination.",
                          "True Hole Technology could be available with Process ID {alternativeProcess}."
                        ],
                        "example": "True Hole Technology could be available with Process ID {alternativeProcess}."
                      }
                    }
                  }
                },
                "reason": {
                  "type": "string",
                  "example": "Unidentified Exception"
                }
              }
            }
          }
        }
      },
      "badrequest": {
        "description": "The part program failed to post. Make sure the request body is formatted properly with application/json.",
        "content": {
          "application/json": {
            "schema": {
              "type": "string",
              "example": "\"Please pass a part program in the request body.\""
            }
          }
        }
      },
      "notfound": {
        "description": "The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent.",
        "content": {
          "application/json": {
            "schema": {
              "type": "string",
              "example": "\"Please pass a part program in the request body.\""
            }
          }
        }
      },
      "internalServerError": {
        "description": "The server experienced an unexpected condition which prevented it from processing your request."
      }
    }
  }
}
